set-option -g default-shell /bin/zsh

# Better prefix
set -g prefix C-a
unbind-key C-b
bind C-a send-prefix

# restore clearing screen
bind C-l send-keys 'C-l'

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize in smaller increments
bind -r M-h resize-pane -L 2
bind -r M-k resize-pane -U 2
bind -r M-j resize-pane -D 2
bind -r M-l resize-pane -R 2

# reload configs
unbind-key r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

unbind-key c                                                # Unbind old create
bind-key c new-window -c "#{pane_current_path}"             # Create current path

# 25% horizontal split
unbind ^T
bind ^T split-window -p 25 -c '#{pane_current_path}'

# 30% vertical split
unbind ^U
bind ^U split-window -h -p 30 -c '#{pane_current_path}'

# horizontal and vertical splits
unbind |
bind | split-window -h -c '#{pane_current_path}'
unbind _
bind _ split-window -v -c '#{pane_current_path}'

unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

# zoom into current pane, repeating will unzoom
unbind +
bind + resize-pane -Z

# Set default terminal for colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm-256color:Tc'

set -g base-index 1                         # 1 indexed, for keyboards
set -sg escape-time 0                       # No escape time
set -g history-limit 10000                  # More sane history limit
set -g renumber-windows on                  # Automatically renumber windows
set -g set-titles on                        # Report terminal title
set -g set-titles-string "#S - #W"          # Terminal title format

# # Status bar
set -g status on
set -g status-interval 2
set -g status-position bottom
set -g status-right "#[fg=white]%d/%m %H:%M | #($HOME/go/bin/gitmux #{pane_current_path})"

set -g message-style bg=colour0,fg=colour1

set -g pane-border-style fg=colour3                       # Yellow borders
set -g pane-active-border-style fg=colour3                # Yellow borders

set -g status-style bg=colour235,fg=colour8
set -g window-status-current-style fg=colour5             # Purple selected windows
set -g window-status-bell-style fg=colour1          # Red on bell

set -g window-status-separator "  "                 # Separate by double space

# Settings for true color
set -ga terminal-overrides ",xterm-256color:Tc"
